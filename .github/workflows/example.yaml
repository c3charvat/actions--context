name: Example Action

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    name: build name
    runs-on: ubuntu-latest
    steps:
      - run: env | grep GITHUB_

      - uses: actions/checkout@v4

      - uses: ./
        with:
          job-name: build name

      - run: |
          echo github.job: ${{ github.job }}

  build-with-environment:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: actions/checkout@v4

      - uses: ./

  build-with-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x, 20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: ./

      - run: |
          echo github.job: ${{ github.job }}

  build-with-matrix-nested-objects:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-16.04, ubuntu-latest ]
        compiler: [ { cpp: g++, c: gcc }, { cpp: g++-8, c: gcc-8 } ]
    steps:
      - uses: actions/checkout@v4

      - uses: ./

      - run: |
          echo github.job: ${{ github.job }}

  build-with-matrix-nested-arrays:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ [g++, gcc ], [g++-8, gcc-8 ] ]
    steps:
      - uses: actions/checkout@v4

      - uses: ./

      - run: |
          echo github.job: ${{ github.job }}

  build-with-reusable-workflow-with-matrix:
    strategy:
      matrix:
        node-version: [ 22.x, 20.x ]
    uses: ./.github/workflows/example-reusable.yml
    with:
      # IMPORTANT ensure first value match the surrounding job name
      # IMPORTANT If the surrounding workflow is a reusable workflow itself, append ', ${{ inputs.workflow-context }}'
      workflow-context: build-with-reusable-workflow-with-matrix, ${{ toJSON(matrix) }}

  build-with-reusable-workflow-with-matrix-inputs:
    strategy:
      fail-fast: false
      matrix:
        inputs: [
          {id: '1', input_1: 'In_this_input_we_are_testing_very_very_very_long_strings', input_2: 'In_this_input_we_are_testing_very_very_very_long_strings'},
          {id: '1', input_1: 'In_this_input_we_are_testing_very_very_very_long_strings', input_2: 'In_this_input_we_are_testing_very_very_very_long_strings'},
          {id: '1', input_1: 'In_this_input_we_are_testing_very_very_very_long_strings', input_2: 'In_this_input_we_are_testing_very_very_very_long_string'},
          {id: '2', input_1: 'Example', input_2: 'In_this_input_we_are_testing_very_very_very_long_strings'},
          {id: '3', input_2: 'In_this_input_we_are_testing_very_very_very_long_strings'},]
    uses: ./.github/workflows/example-reusable-from-matrix.yml
    with:
      id: ${{matrix.inputs.id}} # Id to seperate the different runs
      input_2: ${{matrix.inputs.input_2}}
      input_1: ${{matrix.inputs.input_1}}
      workflow-context: build-with-reusable-workflow-with-matrix-inputs, ${{ toJSON(matrix) }}


  build-with-reusable-workflow-nested:
    uses: ./.github/workflows/example-reusable-nested.yml
    with:
      # IMPORTANT ensure first value match the surrounding job name
      # IMPORTANT If the surrounding workflow is a reusable workflow itself, append ', ${{ inputs.workflow-context }}'
      workflow-context: build-with-reusable-workflow-nested, ${{ toJSON(matrix) }}
